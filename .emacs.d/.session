;;; Automatically generated on Fri Aug  4 22:25:03 2023
;;; Invoked by cyq@archlinux using 29.1
(setq-default kill-ring '("CadetBlue " #(" <col />
      <colgropu style=\"bgcolor:red\">
	<col />
	<col />
      </colgropu>" 1 2 (tag-name #1="col" tag-type void tag-beg 24 font-lock-face web-mode-html-tag-bracket-face) 2 5 (tag-name #1# tag-type void font-lock-face web-mode-html-tag-face) 5 6 (tag-name #1# tag-type void) 6 7 (tag-name #1# tag-type void font-lock-face web-mode-html-tag-bracket-face) 7 8 (tag-name #1# tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name #2="colgropu" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 16 24 (tag-name #2# tag-type start font-lock-face web-mode-html-tag-face) 24 25 (tag-name #2# tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name #2# tag-type start font-lock-face web-mode-html-attr-name-face) 26 27 (tag-attr t tag-name #2# tag-type start font-lock-face web-mode-html-attr-name-face) 27 28 (tag-attr t tag-name #2# tag-type start font-lock-face web-mode-html-attr-name-face) 28 29 (tag-attr t tag-name #2# tag-type start font-lock-face web-mode-html-attr-name-face) 29 30 (tag-attr t tag-name #2# tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name #2# tag-type start font-lock-face web-mode-html-attr-equal-face) 31 43 (tag-attr t tag-name #2# tag-type start font-lock-face web-mode-html-attr-value-face) 43 44 (tag-attr t tag-attr-end 5 tag-name #2# tag-type start font-lock-face web-mode-html-attr-value-face) 44 45 (tag-name #2# tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 47 48 (tag-name #3="col" tag-type void tag-beg 24 font-lock-face web-mode-html-tag-bracket-face) 48 51 (tag-name #3# tag-type void font-lock-face web-mode-html-tag-face) 51 52 (tag-name #3# tag-type void) 52 53 (tag-name #3# tag-type void font-lock-face web-mode-html-tag-bracket-face) 53 54 (tag-name #3# tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face) 56 57 (tag-name #4="col" tag-type void tag-beg 24 font-lock-face web-mode-html-tag-bracket-face) 57 60 (tag-name #4# tag-type void font-lock-face web-mode-html-tag-face) 60 61 (tag-name #4# tag-type void) 61 62 (tag-name #4# tag-type void font-lock-face web-mode-html-tag-bracket-face) 62 63 (tag-name #4# tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face) 70 71 (tag-name #5="colgropu" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 71 72 (tag-name #5# tag-type end font-lock-face web-mode-html-tag-bracket-face) 72 80 (tag-name #5# tag-type end font-lock-face web-mode-html-tag-face) 80 81 (tag-name #5# tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) "
" #("bgcolor=\"#ff99cc\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name #1="td" tag-type start font-lock-face web-mode-html-attr-name-face) 1 2 (tag-attr t tag-name #1# tag-type start font-lock-face web-mode-html-attr-name-face) 2 3 (tag-attr t tag-name #1# tag-type start font-lock-face web-mode-html-attr-name-face) 3 4 (tag-attr t tag-name #1# tag-type start font-lock-face web-mode-html-attr-name-face) 4 5 (tag-attr t tag-name #1# tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name #1# tag-type start font-lock-face web-mode-html-attr-name-face) 6 7 (tag-attr t tag-name #1# tag-type start font-lock-face web-mode-html-attr-name-face) 7 8 (tag-attr t tag-name #1# tag-type start font-lock-face web-mode-html-attr-equal-face) 8 16 (tag-attr t tag-name #1# tag-type start font-lock-face web-mode-html-attr-value-face) 16 17 (tag-attr t tag-attr-end 7 tag-name #1# tag-type start font-lock-face web-mode-html-attr-value-face)) #(";;; package --- summary
;;; commentary:
;;; code:
" 0 4 (face font-lock-comment-delimiter-face fontified t) 4 24 (face font-lock-comment-face fontified t) 24 28 (face font-lock-comment-delimiter-face fontified t) 28 40 (face font-lock-comment-face fontified t) 40 44 (face font-lock-comment-delimiter-face fontified t) 44 50 (face font-lock-comment-face fontified t)) #(";;; package --- Summary
;;; Commentary:
;;; Code:" 0 4 (face font-lock-comment-delimiter-face fontified t) 4 24 (face font-lock-comment-face fontified t) 24 28 (face font-lock-comment-delimiter-face fontified t) 28 40 (face font-lock-comment-face fontified t) 40 44 (face font-lock-comment-delimiter-face fontified t) 44 48 (face font-lock-comment-face fontified t) 48 49 (face font-lock-comment-face rear-nonsticky t fontified t)) #(";;; package --- Summary
;;; Commentary:
;;; Code:" 0 4 (face font-lock-comment-delimiter-face fontified t) 4 24 (face font-lock-comment-face fontified t) 24 28 (face font-lock-comment-delimiter-face fontified t) 28 40 (face font-lock-comment-face fontified t) 40 44 (face font-lock-comment-delimiter-face fontified t) 44 49 (face font-lock-comment-face fontified t))))
(setq-default session-file-alist '(("/home/cyq/Documents/GitHub/MySite/html5test/html5-01.html" 475 465 1 nil nil 335 (overwrite-mode)) ("/home/cyq/Documents/GitHub/emacs_config/.emacs.d/init.el" 582 1 1 nil nil 583 (overwrite-mode)) ("/home/cyq/Documents/GitHub/emacs_config/.emacs.d/lisp/init-web.el" 2271 1 1 nil nil 2272 (overwrite-mode)) ("/home/cyq/Documents/GitHub/emacs_config/.emacs.d/lisp/init-use-package.el" 372 372 1 nil nil 373 (overwrite-mode)) ("/home/cyq/Documents/GitHub/emacs_config/.emacs.d/lisp/init-translate.el" 55 1 1 nil nil 367 (overwrite-mode)) ("/home/cyq/Documents/GitHub/emacs_config/.emacs.d/lisp/init-smartparens.el" 630 1 1 nil nil 631 (overwrite-mode)) ("/home/cyq/Documents/GitHub/emacs_config/.emacs.d/lisp/init-neotree.el" 213 1 1 nil nil 232 (overwrite-mode)) ("/home/cyq/Documents/GitHub/emacs_config/.emacs.d/lisp/init-org.el" 2360 1 1 nil nil 2361 (overwrite-mode)) ("/home/cyq/Documents/GitHub/emacs_config/.emacs.d/lisp/init-mmm.el" 225 1 1 nil nil 226 (overwrite-mode)) ("/home/cyq/Documents/GitHub/emacs_config/.emacs.d/lisp/init-mmm-mode.el" 165 1 1 nil nil 166 (overwrite-mode)) ("/home/cyq/Documents/GitHub/emacs_config/.emacs.d/lisp/init-find.el" 263 50 1 nil nil 1256 (overwrite-mode)) ("/home/cyq/Documents/GitHub/emacs_config/.emacs.d/lisp/init-indent-region.el" 511 1 1 nil nil 512 (overwrite-mode))))
(setq-default file-name-history '("/home/cyq/Documents/GitHub/MySite/html5test/html5-01.html" #("/home/cyq/Documents/GitHub/emacs_config/.emacs.d/lisp/init-better-default.el" 0 76 (ivy-index 3)) "/home/cyq/Documents/GitHub/emacs_config/.emacs.d/lisp/init-use-package.el" #("/home/cyq/Documents/GitHub/" 0 27 (ivy-index 1)) "/home/cyq/Documents/GitHub/emacs_config/.emacs.d/recentf" "/home/cyq/Documents/GitHub/emacs_config/.emacs.d/use-package.el" "/home/cyq/Documents/GitHub/emacs_config/.emacs.d/readme.org" "/home/cyq/Documents/GitHub/emacs_config/.emacs.d/amx-items" "/home/cyq/Documents/GitHub/emacs_config/.emacs.d/lisp/init-web.el" "/home/cyq/Documents/GitHub/emacs_config/.emacs.d/lisp/init-translate.el" "/home/cyq/Documents/GitHub/emacs_config/.emacs.d/lisp/init-smartparens.el" "/home/cyq/Documents/GitHub/emacs_config/.emacs.d/lisp/init-python.el" "/home/cyq/Documents/GitHub/emacs_config/.emacs.d/lisp/init-php.el" "/home/cyq/Documents/GitHub/emacs_config/.emacs.d/lisp/init-org.el" "/home/cyq/Documents/GitHub/emacs_config/.emacs.d/lisp/init-packages.el" "/home/cyq/Documents/GitHub/emacs_config/.emacs.d/lisp/init-org-site.el" "/home/cyq/Documents/GitHub/emacs_config/.emacs.d/lisp/init-neotree.el" "/home/cyq/Documents/GitHub/emacs_config/.emacs.d/lisp/init-mmm.el" "/home/cyq/Documents/GitHub/emacs_config/.emacs.d/lisp/init-mmm-mode.el" "/home/cyq/Documents/GitHub/emacs_config/.emacs.d/lisp/init-ivy.el" "/home/cyq/Documents/GitHub/emacs_config/.emacs.d/lisp/init-indent-region.el" "/home/cyq/Documents/GitHub/emacs_config/.emacs.d/lisp/init-find.el" "/home/cyq/Documents/GitHub/emacs_config/.emacs.d/init.el" #("/home/cyq/Documents/GitHub/emacs_config/.emacs.d/" 0 49 (ivy-index 2)) "c:/Users/cyq37/Documents/GitHub/emacs_config/.emacs.d/lisp/init-better-default.el" #("c:/Users/cyq37/Documents/GitHub/emacs_config/.emacs.d/lisp/" 0 59 (ivy-index 5)) #("c:/Users/cyq37/Documents/GitHub/emacs_config/.emacs.d/" 0 54 (ivy-index 2)) "c:/Program Files/Emacs/emacs-28.1/share/emacs/28.1/etc/COPYING" "/Users/cyq/Documents/GitHub/.emacs.d/init.el" "/Users/cyq/Documents/GitHub/.emacs.d/lisp/init-better-default.el" "/Users/cyq/Documents/GitHub/MySite/htmltest/html02.html" "/Users/cyq/Documents/GitHub/.emacs.d/lisp/init-web.el" "/Users/cyq/Documents/GitHub/.emacs.d/lisp/init-company-web.el" "/Users/cyq/Documents/GitHub/MySite/htmltest/html01.html" "/Users/cyq/Documents/GitHub/.emacs.d/lisp/init-php.el" "/Users/cyq/Documents/GitHub/.emacs.d/lisp/init-packages.el" "/Users/cyq/Documents/GitHub/.emacs.d/lisp/init-embark.el" "/Users/cyq/Documents/GitHub/.emacs.d/lisp/init-ivy.el" "/Users/cyq/Documents/GitHub/.emacs.d/lisp/init-mmm.el" "/Users/cyq/Documents/GitHub/.emacs.d/lisp/init-mmm-mode.el" "/Users/cyq/Documents/GitHub/My_Note/note/兄弟连php教程笔记.org" "/Users/cyq/Documents/GitHub/My_Note/My_Notebook.org" "/private/etc/apache2/httpd.conf"))
(setq-default amx-history '(eww customize web-mode ivy-resume eval-buffer cd 5x5))
(setq-default command-history '((eww "127.0.0.1/htmltelst/html5-01.html" 1) (customize) (browse-web "www.mydrivers.com.cn" 1) (browse-web "www.sohu.com" 1)))
(setq-default counsel-M-x-history '(#("eww" 0 3 (ivy-index 0)) #("^custom" 0 7 (ivy-index 0)) "customize"))
(setq-default counsel-describe-symbol-history '(#("ivy-use-virtual-buffers" 0 23 (ivy-index 0))))
(setq-default counsel-git-grep-cmd-history '("git --no-pager grep -n --no-color -I -e \"%s\""))
(setq-default eww-prompt-history '("127.0.0.1/htmltelst/html5-01.html" "www.mydrivers.com.cn" "www.sohu.com"))
(setq-default occur-collect-regexp-history '("\\1"))
(setq-default table-capture-columns-history '(""))
(setq-default table-capture-justify-history '("left"))
(setq-default table-capture-min-cell-width-history '("5"))
(setq-default table-cell-height-history '("1"))
(setq-default table-cell-span-direction-history '("right"))
(setq-default table-cell-split-contents-to-history '("split"))
(setq-default table-cell-split-orientation-history '("horizontally"))
(setq-default table-cell-width-history '("5"))
(setq-default table-col-delim-regexp-history '(""))
(setq-default table-columns-history '("3"))
(setq-default table-insert-row-column-history '("row"))
(setq-default table-justify-history '("center"))
(setq-default table-row-delim-regexp-history '(""))
(setq-default table-rows-history '("3"))
(setq-default table-sequence-count-history '("0"))
(setq-default table-sequence-increment-history '("1"))
(setq-default table-sequence-interval-history '("1"))
(setq-default table-sequence-justify-history '("left"))
(setq-default table-sequence-string-history '("0"))
(setq-default table-source-caption-history '("Table"))
(setq-default table-source-language-history '("html"))
(setq-default table-target-history '("cell"))
(setq-default xref--history '(nil))
