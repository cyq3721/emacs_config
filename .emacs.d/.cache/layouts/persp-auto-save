;; -*- mode: emacs-lisp; eval: (progn (pp-buffer) (indent-buffer)) -*-
((def-persp nil nil
   (def-wconf
     (((min-height . 4)
       (min-width . 10)
       (min-height-ignore . 3)
       (min-width-ignore . 6)
       (min-height-safe . 1)
       (min-width-safe . 2)
       (min-pixel-height . 68)
       (min-pixel-width . 80)
       (min-pixel-height-ignore . 51)
       (min-pixel-width-ignore . 48)
       (min-pixel-height-safe . 17)
       (min-pixel-width-safe . 16))
      leaf
      (pixel-width . 656)
      (pixel-height . 612)
      (total-width . 82)
      (total-height . 36)
      (normal-height . 1.0)
      (normal-width . 1.0)
      (buffer "*spacemacs*"
              (selected . t)
              (hscroll . 0)
              (fringes 8 8 nil nil)
              (margins 2)
              (scroll-bars nil 0 t nil 0 t nil)
              (vscroll . 0)
              (dedicated)
              (point . 148)
              (start . 1))
      (prev-buffers
       ("*scratch*" 1 1))))
   (def-params
     ((gui-eyebrowse-last-slot . 1)
      (gui-eyebrowse-current-slot . 1)
      (gui-eyebrowse-window-configs
       (1
        (((min-height . 4)
          (min-width . 10)
          (min-height-ignore . 3)
          (min-width-ignore . 6)
          (min-height-safe . 1)
          (min-width-safe . 2)
          (min-pixel-height . 68)
          (min-pixel-width . 80)
          (min-pixel-height-ignore . 51)
          (min-pixel-width-ignore . 48)
          (min-pixel-height-safe . 17)
          (min-pixel-width-safe . 16))
         leaf
         (pixel-width . 656)
         (pixel-height . 612)
         (total-width . 82)
         (total-height . 36)
         (normal-height . 1.0)
         (normal-width . 1.0)
         (buffer "*spacemacs*"
                 (selected . t)
                 (hscroll . 0)
                 (fringes 8 8 nil nil)
                 (margins 2)
                 (scroll-bars nil 0 t nil 0 t nil)
                 (vscroll . 0)
                 (dedicated)
                 (point . 148)
                 (start . 1))
         (prev-buffers
          ("*scratch*" 1 1)))
        ""))))
   t nil nil))
